<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="../img/favicon.ico">
    <title>Quick-Start - Yosai</title>
    <link href="../css/bootstrap-custom.min.css" rel="stylesheet">
    <link href="../css/font-awesome-4.5.0.css" rel="stylesheet">
    <link href="../css/base.css" rel="stylesheet">
    <link rel="stylesheet" href="../css/highlight.css">
    <link href="../css/extra.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
            <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
            <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
        <![endif]-->
</head>

<body>

    <div class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="container">

            <!-- Collapsed navigation -->
            <div class="navbar-header">

                <!-- Expander button -->
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
                <!-- Main title -->
                <a class="navbar-brand" href="..">Yosai</a>
            </div>
            <!-- Expanded navigation -->
            <div class="navbar-collapse collapse">
                <!-- Main navigation -->
                <ul class="nav navbar-nav">
                    <li class="dropdown active">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Get Started <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="../intro/">Introduction</a>
                            </li>
                            <li>
                                <a href="../installation_setup/">Installation and Setup</a>
                            </li>
                            <li class="active">
                                <a href="./">Quick-Start</a>
                            </li>
                        </ul>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Documentation <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="../authentication/">Authentication</a>
                            </li>
                            <li>
                                <a href="../authorization/">Authorization</a>
                            </li>
                            <li>
                                <a href="../sessionmanagement/">Session Management</a>
                            </li>
                            <li>
                                <a href="../events/">Event Processing</a>
                            </li>
                            <li>
                                <a href="../serialization/">Serialization</a>
                            </li>
                            <li>
                                <a href="../architecture/">Architecture Overview</a>
                                <a href="../web/">Web Integration</a>
                            </li>
                        </ul>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">More <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="../devstatus/">Development Status</a>
                            </li>
                            <li>
                                <a href="../library/">Library</a>
                            </li>
                            <li>
                                <a href="../community/">Community</a>
                            </li>
                            <li>
                                <a href="../contributing/">Contributing</a>
                            </li>
                            <li>
                                <a href="../code_of_conduct/">Code of Conduct</a>
                            </li>
                            <li>
                                <a href="../credits/">Credits</a>
                            </li>
                        </ul>
                    </li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="#" data-toggle="modal" data-target="#mkdocs_search_modal">
                            <i class="fa fa-search"></i> Search
                        </a>
                    </li>

                    <li>
                        <a rel="next" href="../installation_setup/">
                            <i class="fa fa-arrow-left"></i> Previous
                        </a>
                    </li>
                    <li>
                        <a rel="prev" href="../authentication/">
                            Next <i class="fa fa-arrow-right"></i>
                        </a>
                    </li>
                    <li>
                        <a href="https://github.com/yosaiproject">

                            <i class="fa fa-github"></i> GitHub
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

        <div class="container">

                <div class="col-md-3"><div class="bs-sidebar hidden-print affix well" role="complementary">
    <ul class="nav bs-sidenav">

        <li class="main active"><a href="#yosai-quick-start">Yosai:  Quick-Start</a></li>

            <li><a href="#overview">Overview</a></li>

            <li><a href="#install">Install</a></li>

            <li><a href="#configure">Configure</a></li>

            <li><a href="#extend">Extend</a></li>

            <li><a href="#instantiate">Instantiate</a></li>

            <li><a href="#use">Use</a></li>


    </ul>
</div></div>
                <div class="col-md-9" role="main">

<h1 id="yosai-quick-start">Yosai:  Quick-Start</h1>
<p>Yosai is a powerful framework that can take you far.  This Quick-Start
guide is intended to help you get started by going through basic usage while
not burdening you with detail.  This is an opinionated quick-start in that it
requires that you use Redis for caching and a relational database for your
data store.</p>
<h2 id="overview">Overview</h2>
<p>Following are the steps that you will go through to use Yosai:</p>
<ol>
<li>Install</li>
<li>Configure</li>
<li>Extend</li>
<li>Instantiate</li>
<li>Use</li>
</ol>
<h2 id="install">Install</h2>
<p>First, install Yosai from PyPI using pip:</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%">pip install yosai
</pre></div>


<p>Installing from PyPI, using pip, will install the project package that includes
<code>yosai.core</code> and <code>yosai.web</code>, a default configuration, and project dependencies.</p>
<h2 id="configure">Configure</h2>
<p>Yosai can be configured in a couple of ways, but since you are quick-starting
you will use Yosai's default settings.  You don't have to do any extra work
to make use of the default settings.</p>
<h2 id="extend">Extend</h2>
<h3 id="caching">Caching</h3>
<p>Yosai has full support for caching, including serialization.  Take advantage
of this and use it.</p>
<p>To get you started, there's an extension library, <code>yosai_dpcache</code>, that is a
fork of Mike Bayer's popular "dogpile" projects -- core and cache -- this is
customized for Yosai's serialization preferences.  Currently, <code>yosai_dpcache</code>
supports Redis but a PR for Memcached, Riak, or other cache stores is welcome.</p>
<p>Install yosai_dpcache from PyPI using pip:</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%">pip install yosai_dpcache
</pre></div>


<p><code>yosai_dpcache</code> is configured either through a settings file + env variable or
by instantiating a DPCacheHandler object with settings arguments. For quickstart
purposes, pass the Redis server settings as arguments:</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai_dpcache.cache</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">DPCacheHandler</span>


<span style="color: #75715e"># time values are denominated in seconds:</span>
<span style="color: #f8f8f2">ttl</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span>
    <span style="color: #e6db74">&#39;absolute_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">3600</span><span style="color: #f8f8f2">,</span>
    <span style="color: #e6db74">&#39;credentials_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">300</span><span style="color: #f8f8f2">,</span>
    <span style="color: #e6db74">&#39;authz_info_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">1800</span><span style="color: #f8f8f2">,</span>
    <span style="color: #e6db74">&#39;session_absolute_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">1800</span>
<span style="color: #f8f8f2">}</span>

<span style="color: #75715e"># this is the name of the cache backend within the library (leave as-is)</span>
<span style="color: #f8f8f2">region_name</span> <span style="color: #f92672">=</span> <span style="color: #e6db74">&#39;yosai_dpcache&#39;</span>

<span style="color: #75715e"># redis server connection settings:</span>
<span style="color: #f8f8f2">region_arguments</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span>
    <span style="color: #e6db74">&#39;url&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #e6db74">&#39;127.0.0.1&#39;</span><span style="color: #f8f8f2">,</span>
    <span style="color: #e6db74">&#39;host&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #e6db74">&#39;localhost&#39;</span><span style="color: #f8f8f2">,</span>
    <span style="color: #e6db74">&#39;port&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">6379</span>
<span style="color: #f8f8f2">}</span>

<span style="color: #f8f8f2">cache_handler</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">DPCacheHandler(ttl</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">ttl,</span>
                               <span style="color: #f8f8f2">region_name</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">region_name,</span>
                               <span style="color: #f8f8f2">backend</span><span style="color: #f92672">=</span><span style="color: #e6db74">&#39;yosai_dpcache.redis&#39;</span><span style="color: #f8f8f2">,</span>
                               <span style="color: #f8f8f2">region_arguments</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">region_arguments)</span>
</pre></div>


<h3 id="persistence">Persistence</h3>
<p>You have to register a persistent data store, such as a database, that Yosai
will request user credentials and authorization information from.  A fully
operational relational data store has been created for you to help you get
started:  <code>yosai_alchemystore</code>.  <code>yosai_alchemystore</code> uses the SQLAlchemy ORM
to interface with an underlying relational database.  </p>
<p>Install yosai_alchemystore from PyPI using pip:</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%">pip install yosai_alchemystore
</pre></div>


<p>Just as with <code>yosai_dpcache</code>, <code>yosai_alchemystore</code> is configured either using
a settings file + env variable or by instantiating an instance with a settings
argument. For quickstart purposes, pass the database connection string
as an argument.</p>
<p>You'll need to decide what kind of database to use.  For testing, you could
run a sqlite database but for production you would use postgresql.   You could
find a python script within the yosai_alchemystore repo, <code>create_populate_db.py</code>,
 that would populate a sqlite database with test data, storing it in the /conf
directory.</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai_alchemystore</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">AlchemyAccountStore</span>

<span style="color: #75715e"># this is the syntax of a connection string recognized by SQLAlchemy for Postgresql:</span>
<span style="color: #f8f8f2">db_url</span> <span style="color: #f92672">=</span> <span style="color: #e6db74">&#39;postgres://username:password@localhost:5432/database&#39;</span>

<span style="color: #f8f8f2">account_store</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AlchemyAccountStore(db_url</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">db_url)</span>

<span style="color: #f8f8f2">realm</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AccountStoreRealm(name</span><span style="color: #f92672">=</span><span style="color: #e6db74">&#39;DefaultRealm&#39;</span><span style="color: #f8f8f2">,</span>
                          <span style="color: #f8f8f2">account_store</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">account_store)</span>
</pre></div>


<h2 id="instantiate">Instantiate</h2>
<p>Altogether, here is how you instantiate an instance of Yosai.  </p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%">    <span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai_dpcache.cache</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">DPCacheHandler</span>
    <span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai_alchemystore</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">AlchemyAccountStore</span>
    <span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai.core</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">SecurityUtils,</span> <span style="color: #f8f8f2">AccountStoreRealm</span>

    <span style="color: #75715e"># time values are denominated in seconds:</span>
    <span style="color: #f8f8f2">ttl</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span>
        <span style="color: #e6db74">&#39;absolute_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">3600</span><span style="color: #f8f8f2">,</span>
        <span style="color: #e6db74">&#39;credentials_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">300</span><span style="color: #f8f8f2">,</span>
        <span style="color: #e6db74">&#39;authz_info_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">1800</span><span style="color: #f8f8f2">,</span>
        <span style="color: #e6db74">&#39;session_absolute_ttl&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">1800</span>
    <span style="color: #f8f8f2">}</span>

    <span style="color: #75715e"># this is the name of the cache backend within the library (leave as-is)</span>
    <span style="color: #f8f8f2">region_name</span> <span style="color: #f92672">=</span> <span style="color: #e6db74">&#39;yosai_dpcache&#39;</span>

    <span style="color: #75715e"># redis server connection settings:</span>
    <span style="color: #f8f8f2">region_arguments</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span>
        <span style="color: #e6db74">&#39;url&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #e6db74">&#39;127.0.0.1&#39;</span><span style="color: #f8f8f2">,</span>
        <span style="color: #e6db74">&#39;host&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #e6db74">&#39;localhost&#39;</span><span style="color: #f8f8f2">,</span>
        <span style="color: #e6db74">&#39;port&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">6379</span>
    <span style="color: #f8f8f2">}</span>

    <span style="color: #f8f8f2">cache_handler</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">DPCacheHandler(ttl</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">ttl,</span>
                                   <span style="color: #f8f8f2">region_name</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">region_name,</span>
                                   <span style="color: #f8f8f2">backend</span><span style="color: #f92672">=</span><span style="color: #e6db74">&#39;yosai_dpcache.redis&#39;</span><span style="color: #f8f8f2">,</span>
                                   <span style="color: #f8f8f2">region_arguments</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">region_arguments)</span>


    <span style="color: #75715e"># this is the syntax of a connection string recognized by SQLAlchemy for</span>
    <span style="color: #75715e"># Postgresql:</span>
    <span style="color: #f8f8f2">db_url</span> <span style="color: #f92672">=</span> <span style="color: #e6db74">&#39;postgres://username:password@localhost:5432/database&#39;</span>

    <span style="color: #f8f8f2">account_store</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AlchemyAccountStore(db_url</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">db_url)</span>

    <span style="color: #f8f8f2">realm</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AccountStoreRealm(name</span><span style="color: #f92672">=</span><span style="color: #e6db74">&#39;DefaultRealm&#39;</span><span style="color: #f8f8f2">,</span>
                              <span style="color: #f8f8f2">account_store</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">account_store)</span>

    <span style="color: #f8f8f2">security_manager</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">NativeSecurityManager(cache_handler</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">cache_handler,</span>
                                             <span style="color: #f8f8f2">realms</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">(realm,),</span>
                                             <span style="color: #f8f8f2">session_schema</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">None)</span>

    <span style="color: #f8f8f2">yosai</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">SecurityUtils(security_manager</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">security_manager)</span>
</pre></div>


<div class="admonition note"></div>
<p>A Session <code>marshmallow</code> schema is omitted from this example.  You'd define a
schema to cache session attributes (state).</p>
<h3 id="yosai-web">Yosai Web</h3>
<p>The <code>yosai</code> project features a <code>yosai.core</code> package and <code>yosai.web</code>
integration library.</p>
<p>If you're using Yosai for web application development, use the <code>yosai.web</code>
library to instantiate Yosai.  <code>yosai.web</code> is a derivative of <code>yosai.core</code>,
extending it to support interactions with web request/response objects.</p>
<p>If you aren't using Yosai for web development, you will either use <code>yosai.core</code>
or a derivative of it, just as <code>yosai.web</code> is a derivative of <code>yosai.core</code>.</p>
<p>In the last step above, we instantiate a "native" yosai instance.  We could have easily
instantiated a web-enabled instance instead by replacing <code>SecurityUtils</code> with
<code>WebSecurityUtils</code> and <code>NativeSecurityManager</code> with <code>WebSecurityManager</code>
from <code>yosai.web</code>:</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai.web</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">WebSecurityUtils,</span> <span style="color: #f8f8f2">WebSecurityManager</span>

<span style="color: #f8f8f2">security_manager</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">WebSecurityManager(realms</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">(realm,),</span>
                                      <span style="color: #f8f8f2">cache_handler</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">DPCacheHandler(),</span>
                                      <span style="color: #f8f8f2">session_attributes_schema</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">AttributesSchema)</span>
<span style="color: #f8f8f2">yosai</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">WebSecurityUtils()</span>
<span style="color: #f8f8f2">yosai</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">security_manager</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">security_manager</span>
</pre></div>


<h2 id="use">Use</h2>
<p>The following example was created to illustrate the myriad ways that you
can declare an authorization policy in an application, ranging from general
role-level specification to very specific "scoped" permissions.  The
authorization policy is as follows:</p>
<ul>
<li>Either a user with role membership "patient" or "nurse" may request a
  refill of a medical prescription</li>
<li>A user who is granted permission to write prescriptions may obtain the
  list of pending prescription refill requests</li>
<li>A user who is granted permission to write prescriptions for a specific
  patient may issue a prescription for that patient</li>
</ul>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">yosai.core</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">requires_role,</span> <span style="color: #f8f8f2">requires_permission,</span> <span style="color: #f8f8f2">requires_dynamic_permission</span>


<span style="color: #a6e22e">@requires_role</span><span style="color: #f8f8f2">(roleid_s</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">[</span><span style="color: #e6db74">&#39;patient&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;nurse&#39;</span><span style="color: #f8f8f2">],</span> <span style="color: #f8f8f2">logical_operator</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">any)</span>
<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">request_prescription_refill</span><span style="color: #f8f8f2">(patient,</span> <span style="color: #f8f8f2">prescription):</span>
    <span style="color: #f92672">...</span>


<span style="color: #a6e22e">@requires_permission</span><span style="color: #f8f8f2">([</span><span style="color: #e6db74">&#39;prescription:write&#39;</span><span style="color: #f8f8f2">])</span>
<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">get_prescription_refill_requests</span><span style="color: #f8f8f2">(patient):</span>
    <span style="color: #f92672">...</span>


<span style="color: #a6e22e">@requires_dynamic_permission</span><span style="color: #f8f8f2">([</span><span style="color: #e6db74">&#39;prescription:write:{patient.patient_id}&#39;</span><span style="color: #f8f8f2">])</span>
<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">issue_prescription</span><span style="color: #f8f8f2">(patient,</span> <span style="color: #f8f8f2">prescription):</span>
    <span style="color: #f92672">...</span>
</pre></div>


<p>Note how the authorization policy is declared using yosai's authorization
decorators.  These global decorators are associated with the yosai instance
when the yosai instance is used as a context manager.  </p>
<p><strong>Always use yosai through the context manager.</strong></p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%"><span style="color: #66d9ef">with</span> <span style="color: #f8f8f2">yosai:</span>
    <span style="color: #f8f8f2">issue_prescription(patient)</span>

    <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">prescription</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">get_prescription_refill_requests(patient):</span>
        <span style="color: #f8f8f2">issue_prescription(patient,</span> <span style="color: #f8f8f2">prescription)</span>
</pre></div>


<p>If you were using Yosai with a web application, the syntax would be similar
to that above but requires that a <code>WebRegistry</code> instance be passed as
as argument to the context manager.  The web integration library is further
elaborated upon in the Web Integration section of this documentation.</p>
<div class="codehilite" style="background: #272822"><pre style="line-height: 125%"><span style="color: #66d9ef">with</span> <span style="color: #f8f8f2">yosai(web_registry):</span>
    <span style="color: #f8f8f2">issue_prescription(patient)</span>

    <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">prescription</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">get_prescription_refill_requests(patient):</span>
        <span style="color: #f8f8f2">issue_prescription(patient,</span> <span style="color: #f8f8f2">prescription)</span>
</pre></div></div>

        </div>

        <footer class="col-md-12">
            <hr>

            <p>Documentation built with <a href="http://www.mkdocs.org/">MkDocs</a>.</p>
        </footer>

        <script src="../js/jquery-1.10.2.min.js"></script>
        <script src="../js/bootstrap-3.0.3.min.js"></script>
        <script src="../js/highlight.pack.js"></script>
        <script>var base_url = '..';</script>
        <script data-main="../mkdocs/js/search.js" src="../mkdocs/js/require.js"></script>
        <script src="../js/base.js"></script>
        <script src="../js/extra.js"></script>

        <div class="modal" id="mkdocs_search_modal" tabindex="-1" role="dialog" aria-labelledby="Search Modal" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                        <h4 class="modal-title" id="exampleModalLabel">Search</h4>
                    </div>
                    <div class="modal-body">
                        <p>
                            From here you can search these documents. Enter
                            your search terms below.
                        </p>
                        <form role="form">
                            <div class="form-group">
                                <input type="text" class="form-control" placeholder="Search..." id="mkdocs-search-query">
                            </div>
                        </form>
                        <div id="mkdocs-search-results"></div>
                    </div>
                    <div class="modal-footer">
                    </div>
                </div>
            </div>
        </div>

    </body>
</html>
