within /subject/support:
    note sure how to port SubjectRunnable, SubjectCallable, SubjectThreadState

there are several methods that make local copies of a mutable parameter and
I think I haven't accounted for their mutability by making a copy.copy of 
them

replace 'Input' docstrings with real syntax:
        :param arg1: the first value
        :type arg1: int, float,...
        :param arg2: the first value
        :type arg2: int, float,...
        :param arg3: the first value
        :type arg3: int, float,...
        :returns: arg1/arg2 +arg3
        :rtype: int, float

move towards duck-typing and away from type checking

for each module, create corresponding interfaces.py and abstracts.py module

authc
  | 
  `--- authc.py
       interfaces.py
       abstracts.py

Note on Cryptography and Hashing -- Yosai uses Passlib, which aggregates
the best libraries available for cryptography and 
Yosai replaces the hash-management "crypto" sub-package in Shiro with 
the hash management functionality in passlib library,
which not only handles hash management (as Shiro's crypto subpackage does)
but also higher-level functionality such as password matching.

It's not yet clear how/where the cacheManager is used by the DefaultAccountCacheHandler.
The cacheManager is inherited from the AbstractCacheHandler.
I get the impression that this is either a relic of legacy pre-2.0 code or
unfinished work for Shiro 2.0, perhaps related to the resolvers?

