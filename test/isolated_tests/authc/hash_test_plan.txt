
DefaultHashService Tests
=========================
constructor test:
    - create mock object for authc_config, giving it a private_salt attribute
    + test constructor exception handling of private_salt==None by not 
      defining the private_salt attribute of the mock

private_salt mutatator test:
    + private_salt setting exception test(provide a non-string parameter)

test_compute_hash(request)
    M: uses a cryptcontext mock
    T:  call argumentless compute_hash(), asserting None is returned
    T:  call with a request object that is missing a source attribute, asserting None is returned
    T:  call with a request object that contains iterations, asserting ciphertext value is returned 
    T:  call with a request object that does not contain iterations, asserting ciphertext value bytearray and config is returned in a result dict
    T:  call with a request object that does not contain iterations nor a source attribute, asserting PepperPasswordException

test_generate_default_context():
    M: uses authc_config mock
    T:  raise exception by creating an authc_config where hash_algorithms is empty
    T:  assert that with a well defined authc_config mock, a call returns a dict that
             contains the expected specifications (key and value)

test_generate_crypt_context(request):
    M:  uses a hash request mock
    T:  assert that with a well defined hash request mock, which includes
        iterations, returns a CryptContext object configured as per the request
        mock specifications
    T:  assert that with a well defined hash request mock, which excludes
        iterations, returns a CryptContext object configured as per the request
        mock specifications
    T:  assert that a request that contains an unrecognized hash algorithm
        raises a CryptContextException


test_get_algorithm_name(request):
    M:  uses hash request mock
    T:  assert that a hash request missing an algorithm_name attribute (None)
        defaults to the hashing scheme defined by self.default_context
    T:  assert that a well defined hash request returns the name of the algo

test_get_iterations(request)
    M:  uses hash request mock
    T:  assert that with a hash request missing an iterations attribute (None)
        the method returns an iterations value of the default algorithm
    T:  assert that with a hash request missing an iterations attribute (None)
        the method returns an iterations value of the default algorithm, 
        but the default algorithm is missing
    T:  assert that with a hash request missing an iterations attribute (None) 
        the method obtains a default algorithm but the default context does not
        have a default_rounds attribute defined, returning None instead


HashRequest Tests
=================
test_source_mutator 
    T:  assert that assigning source to None results in self.source == None
    T:  assert that a string source param results in self.source == bytearray(source) 
    T:  assert that a bytearray source results in self.source == bytearray(source)
    T:  assert that a List source value (containing a string) raises an InvalidArgumentException

